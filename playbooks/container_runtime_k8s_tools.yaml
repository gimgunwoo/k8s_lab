---

- name: disable swap
  shell: |
    swapoff -a

- name: comment swap in /etc/fstab
  replace:
    path: /etc/fstab
    regexp: '^([^#].*?\sswap\s+sw\s+.*)$'
    replace: '# \1'

- name: install packages
  apt:
    name:
      - curl
      - apt-transport-https
      - ca-certificates
      - gnupg
      - lsb-release
    state: present

- name: add docker gpg key
  shell: >
    curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg

- name: add docker repository
  apt_repository:
    repo: "deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu focal stable"
    filename: docker
    state: present
    update_cache: true

- name: create a keyrings dir
  file:
    path: /etc/apt/keyrings
    state: directory
    owner: root
    group: root
    mode: '0755'

- name: add kubernetes public signing key
  shell: >
    curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.29/deb/Release.key | sudo gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg

- name: add kubernetes repository
  shell: >
    echo 'deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.29/deb/ /' | sudo tee /etc/apt/sources.list.d/kubernetes.list

- name: apt update
  apt:
    update_cache: yes

- name: install docker and kubernetes
  apt:
    name:
      - docker-ce
      - docker-ce-cli
      - containerd.io
      - docker-compose
      - kubelet
      - kubeadm
      - kubectl

- name: hold kubernetes' version
  dpkg_selections:
    name: "{{ item }}"
    selection: hold
  with_items:
    - kubelet
    - kubeadm
    - kubectl

- name: add overlay and br_netfilter modules
  lineinfile:
    path: /etc/modules-load.d/k8s.conf
    line: "{{ item.line }}"
    create: yes
  loop:
    - { line: 'overlay' }
    - { line: 'br_netfilter' }

- name: Forwarding IPv4 and letting iptables see bridged traffic
  lineinfile:
    path: /etc/sysctl.d/k8s.conf
    line: "{{ item.line }}"
    create: yes
  loop:
    - { line: 'net.bridge.bridge-nf-call-iptables  = 1' }
    - { line: 'net.bridge.bridge-nf-call-ip6tables = 1' }
    - { line: 'net.ipv4.ip_forward                 = 1' }

- name: Apply sysctl params without reboot
  shell: sysctl --system

- name: configuring cgroup driver
  copy:
    src: ../files/config.toml
    dest: /etc/containerd/config.toml
    owner: root
    group: root
    mode: '0644'

- name: Reload systemd config
  systemd:
    daemon_reload: yes

- name: Restart docker service
  systemd:
    state: restarted
    name: docker

- name: Reboot the machine
  reboot: